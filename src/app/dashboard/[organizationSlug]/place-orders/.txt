"use client"

import { useState } from "react"
import { useRouter } from "next/navigation"
import { Search, MapPin, Building2, ArrowRight, Truck, Clock } from "lucide-react"
import { Input } from "@/components/ui/input"
import { Card, CardContent } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Button } from "@/components/ui/button"

interface Distributor {
    id: string
    name: string
    logo?: string
    location: string
    categories: string[]
    leadTime: string
    isPreferred?: boolean
    isNew?: boolean
}

const distributors: Distributor[] = [
    {
        id: "eabl",
        name: "East African Breweries Limited",
        logo: "/eabl-logo.png?height=80&width=80",
        location: "Ruaraka, Nairobi",
        categories: ["Beer", "Spirits", "RTD"],
        leadTime: "1-6 hrs",
        isPreferred: true,
    },
    {
        id: "kwal",
        name: "Kenya Wine Agencies Limited",
        logo: "/kwal-logo.jpg?height=80&width=80",
        location: "Industrial Area, Nairobi",
        categories: ["Wine", "Spirits"],
        leadTime: "6hrs-1 day",
    },
    {
        id: "london-distillers",
        name: "London Distillers Kenya",
        logo: "/london-distillers-logo.png?height=80&width=80",
        location: "Athi River",
        categories: ["Spirits", "Brandy"],
        leadTime: "1-2 days",
    },
    {
        id: "keroche",
        name: "Keroche Breweries",
        logo: "/keroche-logo.png?height=80&width=80",
        location: "Naivasha",
        categories: ["Beer", "Spirits"],
        leadTime: "1-2 days",
    },
    {
        id: "heineken",
        name: "Heineken East Africa",
        logo: "/heineken-logo.png?height=80&width=80",
        location: "Westlands, Nairobi",
        categories: ["Beer", "Cider"],
        leadTime: "3-8 hrs",
        isNew: true,
    },
    {
        id: "pernod-ricard",
        name: "Pernod Ricard Kenya",
        logo: "/Pernod_Ricard_Logo.png?height=80&width=80",
        location: "Westlands, Nairobi",
        categories: ["Spirits", "Wine"],
        leadTime: "1-2 days",
    },
    {
        id: "diageo",
        name: "Diageo Kenya",
        logo: "/diageo-logo.png?height=80&width=80",
        location: "Upper Hill, Nairobi",
        categories: ["Spirits", "Beer"],
        leadTime: "1-2 days",
        isPreferred: true,
    },
    {
        id: "distell",
        name: "Distell Kenya",
        logo: "/distell-logo.png?height=80&width=80",
        location: "Tatu City",
        categories: ["Wine", "Spirits", "Cider"],
        leadTime: "2-6hrs",
    },
]

export default function PlaceOrdersPage() {
    const router = useRouter()
    const [searchQuery, setSearchQuery] = useState("")

    // Filter distributors based on search query
    const filteredDistributors = distributors.filter(
        (distributor) =>
            distributor.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
            distributor.location.toLowerCase().includes(searchQuery.toLowerCase()) ||
            distributor.categories.some((category) => category.toLowerCase().includes(searchQuery.toLowerCase())),
    )

    // Handle distributor selection
    const handleDistributorSelect = (distributorId: string) => {
        router.push(`/dashboard/${distributorId}/place-orders/${distributorId}`)
    }

    return (
        <div className="mx-auto py-3 max-w-5xl">
            <div className="flex flex-col space-y-2">
                <div className="flex flex-col space-y-2">
                    <p className="text-muted-foreground">Select a distributor to place your order</p>
                </div>

                <div className="relative w-full max-w-md">
                    <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground h-4 w-4" />
                    <Input
                        placeholder="Search distributors by name, location or category..."
                        className="pl-10 h-10"
                        value={searchQuery}
                        onChange={(e) => setSearchQuery(e.target.value)}
                    />
                </div>

                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4">
                    {filteredDistributors.map((distributor) => (
                        <Card
                            key={distributor.id}
                            className="p-1.5 overflow-hidden hover:shadow-md transition-shadow cursor-pointer border-2 hover:border-primary/20"
                            onClick={() => handleDistributorSelect(distributor.id)}
                        >
                            <CardContent className="p-1.5 flex flex-col h-full">
                                <div className="flex items-center gap-3 mb-3">
                                    <div className="h-12 w-12 rounded-md bg-muted flex items-center justify-center overflow-hidden">
                                        {distributor.logo ? (
                                            <img
                                                src={distributor.logo || "/kwal-logo.jpg"}
                                                alt={distributor.name}
                                                className="h-full w-full object-contain"
                                            />
                                        ) : (
                                            <Building2 className="h-6 w-6 text-muted-foreground" />
                                        )}
                                    </div>
                                    <div className="flex-1 min-w-0">
                                        <h3 className="font-normal text-sm line-clamp-1">{distributor.name}</h3>
                                        <div className="flex items-center text-xs text-muted-foreground mt-0.5">
                                            <MapPin className="h-3 w-3 mr-1 flex-shrink-0" />
                                            <span className="truncate">{distributor.location}</span>
                                        </div>
                                    </div>
                                </div>

                                {/* <div className="flex flex-wrap gap-1 mb-3">
                                    {distributor.categories.map((category) => (
                                        <Badge key={category} variant="outline" className="text-xs h-4 font-normal">
                                            {category}
                                        </Badge>
                                    ))}
                                </div> */}

                                <div className="flex items-center justify-between mt-auto pt-2 border-t border-border">
                                    <div className="flex items-center text-xs text-muted-foreground">
                                        <Clock className="h-3 w-3 mr-1" />
                                        <span>Lead time: {distributor.leadTime}</span>
                                    </div>

                                    <div className="flex items-center gap-2">
                                        {distributor.isPreferred && (
                                            <Badge className="bg-green-500 hover:bg-green-600 text-[10px] h-5 px-1.5">Preferred</Badge>
                                        )}
                                        {distributor.isNew && (
                                            <Badge className="bg-blue-500 hover:bg-blue-600 text-[10px] h-5 px-1.5">New</Badge>
                                        )}
                                    </div>
                                </div>

                                <Button variant="ghost" size="sm" className="cursor-pointer mt-2 w-full justify-between text-xs h-8">
                                    Place Order
                                    <ArrowRight className="h-3.5 w-3.5 ml-1" />
                                </Button>
                            </CardContent>
                        </Card>
                    ))}
                </div>

                {filteredDistributors.length === 0 && (
                    <div className="flex flex-col items-center justify-center py-12 text-center">
                        <Truck className="h-16 w-16 text-muted-foreground/30 mb-4" />
                        <h3 className="text-lg font-medium mb-1">No distributors found</h3>
                        <p className="text-muted-foreground mb-4">Try adjusting your search term</p>
                        <Button onClick={() => setSearchQuery("")}>Clear Search</Button>
                    </div>
                )}
            </div>
        </div>
    )
}